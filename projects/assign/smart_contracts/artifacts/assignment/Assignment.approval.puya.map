{
  "version": 3,
  "sources": [
    "../../assignment/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;AACQ;AAAe;AAAf;;AAHR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;AAAA;AAKK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdL;;AAAA;;;;;;;;;AAAA;AAAA;AAKA;;;AAEe;AAAA;AAAA;AAAA;AAAP;AAER;;;AAEQ;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAP;AAER;;;AAEQ;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.approval_program",
      "params": {},
      "block": "smart_contracts.assignment.contract.Assignment.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"counter\" 0x151f7c75"
    },
    "20": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "22": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "25": {
      "callsub": "smart_contracts.assignment.contract.Assignment.__init__",
      "op": "callsub __init__"
    },
    "28": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.assignment.contract.Assignment.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "31": {
      "op": "return",
      "stack_out": []
    },
    "32": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "35": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\""
      ],
      "stack_out": [
        "\"counter\""
      ]
    },
    "36": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "\"counter\"",
        "0"
      ]
    },
    "37": {
      "op": "app_global_put",
      "stack_out": []
    },
    "38": {
      "retsub": true,
      "op": "retsub"
    },
    "39": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "42": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "44": {
      "op": "bz __puya_arc4_router___bare_routing@7",
      "stack_out": []
    },
    "47": {
      "op": "pushbytess 0xc9c9375a 0x4a325901 0xdae6e4ce // method \"get_counter()uint64\", method \"increment()uint64\", method \"decrement()uint64\""
    },
    "64": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(decrement()uint64)",
        "Method(get_counter()uint64)",
        "Method(increment()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(get_counter()uint64)",
        "Method(increment()uint64)",
        "Method(decrement()uint64)",
        "tmp%2#0"
      ]
    },
    "67": {
      "op": "match __puya_arc4_router___get_counter_route@2 __puya_arc4_router___increment_route@3 __puya_arc4_router___decrement_route@4",
      "stack_out": []
    },
    "75": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "76": {
      "retsub": true,
      "op": "retsub"
    },
    "77": {
      "block": "__puya_arc4_router___get_counter_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "79": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "80": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "81": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "83": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "84": {
      "callsub": "smart_contracts.assignment.contract.Assignment.get_counter",
      "op": "callsub get_counter",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "87": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "88": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "89": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "90": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "91": {
      "op": "log",
      "stack_out": []
    },
    "92": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "93": {
      "retsub": true,
      "op": "retsub"
    },
    "94": {
      "block": "__puya_arc4_router___increment_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "96": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "97": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "98": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "100": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "101": {
      "callsub": "smart_contracts.assignment.contract.Assignment.increment",
      "op": "callsub increment",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "104": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "105": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "106": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "107": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "108": {
      "op": "log",
      "stack_out": []
    },
    "109": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "110": {
      "retsub": true,
      "op": "retsub"
    },
    "111": {
      "block": "__puya_arc4_router___decrement_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "113": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "114": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "115": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "117": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "118": {
      "callsub": "smart_contracts.assignment.contract.Assignment.decrement",
      "op": "callsub decrement",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "121": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "122": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "123": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "124": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "125": {
      "op": "log",
      "stack_out": []
    },
    "126": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "127": {
      "retsub": true,
      "op": "retsub"
    },
    "128": {
      "block": "__puya_arc4_router___bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "130": {
      "op": "bnz __puya_arc4_router___after_if_else@11",
      "stack_out": []
    },
    "133": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "135": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "136": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "138": {
      "retsub": true,
      "op": "retsub"
    },
    "139": {
      "block": "__puya_arc4_router___after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "140": {
      "retsub": true,
      "op": "retsub"
    },
    "141": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.get_counter",
      "params": {},
      "block": "get_counter",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "144": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "145": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "146": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "147": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "148": {
      "retsub": true,
      "op": "retsub"
    },
    "149": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.increment",
      "params": {},
      "block": "increment",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "153": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "154": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "155": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "156": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "157": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "158": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counter\""
      ]
    },
    "159": {
      "op": "swap",
      "stack_out": [
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "160": {
      "op": "app_global_put",
      "stack_out": []
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "162": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "163": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "164": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "165": {
      "retsub": true,
      "op": "retsub"
    },
    "166": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.decrement",
      "params": {},
      "block": "decrement",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "169": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "170": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "172": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "173": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "174": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "175": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counter\""
      ]
    },
    "176": {
      "op": "swap",
      "stack_out": [
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "177": {
      "op": "app_global_put",
      "stack_out": []
    },
    "178": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "179": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "180": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "181": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "182": {
      "retsub": true,
      "op": "retsub"
    }
  }
}